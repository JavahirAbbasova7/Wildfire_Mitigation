in_evaluation: false
sim_init_cfg:
  simfire_cls:
    _target_: hydra.utils.get_class
    path: simfire.sim.simulation.FireSimulation
  config_dict: ${simulation.simfire}
movements: [none, up, down, left, right]
interactions: [fireline, none, wetline]
attributes: [fire_map, elevation, w_0, sigma, delta, M_x]
normalized_attributes: [elevation]
agent_speed: 9
# Defines the class that will be used to monitor and track `ReactiveHarness`.
harness_analytics_partial:
  _target_: simharness2.analytics.harness_analytics.ReactiveHarnessAnalytics
  _partial_: true
  # Defines the class that will be used to monitor and track `FireSimulation`.
  sim_analytics_partial:
    _target_: simharness2.analytics.simulation_analytics.FireSimulationAnalytics
    _partial_: true
    # Defines the class that will be used to monitor and track agent behavior.
    agent_analytics_partial:
      _target_: simharness2.analytics.agent_analytics.ReactiveAgentAnalytics
      _partial_: true
      movement_types: ${....movements}
      interaction_types: ${....interactions}
reward_init_cfg:
  reward_cls:
    _target_: hydra.utils.get_class
    path: simharness2.rewards.base_reward.SimpleReward
  kwargs: null
    # fixed_reward: 100
    # static_penalty: 50
    # invalid_movement_penalty: 5
agent_initialization_cls:
  _target_: hydra.utils.get_class
  path: simharness2.agents.FixedPositionAgentInitializer
agent_initialization_kwargs:
  agent_pos: [[0, 64]]
action_space_cls:
  _target_: hydra.utils.get_class
  path: gymnasium.spaces.Discrete
